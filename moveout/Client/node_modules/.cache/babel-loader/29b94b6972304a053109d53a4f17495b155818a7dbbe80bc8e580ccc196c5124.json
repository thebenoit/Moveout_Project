{"ast":null,"code":"var _jsxFileName = \"/Users/jerrybenoit/Desktop/Moveout_Project/moveout/Client/src/components/Card.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport CardItem from \"../components/CardItem\";\nimport \"../components/Cards.css\";\nimport axios from \"axios\";\nimport { FixedSizeGrid as Grid } from \"react-window\";\n\n// const {MongoClient} = require(\"mongodb\");\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Card() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [apartments, setApartments] = useState([]);\n  const [nbAppartement, setNbAppartement] = useState();\n  const APPART_URL = \"http://localhost:4000/appartments\";\n  const [w, setW] = useState(960);\n  useEffect(() => {\n    /**\n     * méthode qui fetch le backend API qui contient les\n     * data des appartements\n     */\n    const axiosFetchData = async () => {\n      try {\n        // Fetch data using Axios\n        const response = await axios.get(APPART_URL);\n        // Set fetched data into state\n        setApartments(response.data);\n      } catch (error) {\n        console.error(\"Error fetching apartment data:\", error);\n      }\n    };\n    axiosFetchData();\n  }, []);\n  const CardCell = ({\n    columnIndex,\n    rowIndex,\n    style\n  }) => {\n    //Calculate the index using row and column indices\n    const index = rowIndex * 3 + columnIndex; // 3 columns per row\n\n    if (index >= apartments.length) return null; // prevent out-of bounce errors\n\n    const {\n      price,\n      title,\n      img,\n      url\n    } = apartments[index];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      children: /*#__PURE__*/_jsxDEV(CardItem, {\n        src: img,\n        text: `${price}$ ${title}`,\n        path: url,\n        label: \"Facebook\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this);\n  };\n  const ApartmentGrid = () => {\n    if (w >= 960) {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        columnCount: 3,\n        rowCount: Math.ceil(apartments.length / 3) //Number of rows needed\n        ,\n        columnWidth: 300,\n        height: 900,\n        rowHeight: 300,\n        width: 850,\n        children: CardCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        columnCount: 1,\n        rowCount: Math.ceil(apartments.length / 3) //Number of rows needed\n        ,\n        columnWidth: 350,\n        height: 900,\n        rowHeight: 300,\n        width: 350,\n        children: CardCell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 1\n      }, this);\n    }\n  };\n  /**\n   * méthode qui permet de savoir la taille de la fenetre à tout moment\n   */\n  const useWindowWidth = () => {\n    _s();\n    const [windowWidth, setWindowWidth] = useState(0);\n    useEffect(() => {\n      // Fonction pour mettre à jour le state lorsque la fenêtre est redimensionnée\n      const handleResize = () => {\n        setWindowWidth(window.innerWidth);\n      };\n      //ajouter un gestionnaire d'évènement pour resizd\n      window.addEventListener('resize', handleResize);\n\n      // Supprimer le gestionnaire d'événements au nettoyage\n      return () => {\n        window.removeEventListener('resize', handleResize);\n      };\n    });\n    return windowWidth;\n  };\n  _s(useWindowWidth, \"pbbkZhtjlGc4tSJD9AQY+caR7fc=\");\n  seuseWindowWidth();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cards\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"taille: \", w]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", apartments.length, \" R\\xE9sultats\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards__container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards__wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cards__item\",\n          children: /*#__PURE__*/_jsxDEV(ApartmentGrid, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n_s2(Card, \"0L87g2hPB1g55TVP4wwjvZsyjtg=\");\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useEffect","useState","CardItem","axios","FixedSizeGrid","Grid","jsxDEV","_jsxDEV","Card","_s2","_s","$RefreshSig$","apartments","setApartments","nbAppartement","setNbAppartement","APPART_URL","w","setW","axiosFetchData","response","get","data","error","console","CardCell","columnIndex","rowIndex","style","index","length","price","title","img","url","children","src","text","path","label","fileName","_jsxFileName","lineNumber","columnNumber","ApartmentGrid","columnCount","rowCount","Math","ceil","columnWidth","height","rowHeight","width","useWindowWidth","windowWidth","setWindowWidth","handleResize","window","innerWidth","addEventListener","removeEventListener","seuseWindowWidth","className","_c","$RefreshReg$"],"sources":["/Users/jerrybenoit/Desktop/Moveout_Project/moveout/Client/src/components/Card.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CardItem from \"../components/CardItem\";\nimport \"../components/Cards.css\";\nimport axios from \"axios\";\nimport { FixedSizeGrid as Grid } from \"react-window\";\n\n// const {MongoClient} = require(\"mongodb\");\n\n\n\nfunction Card() {\n  const [apartments, setApartments] = useState([]);\n  const [nbAppartement, setNbAppartement] = useState();\n  const APPART_URL = \"http://localhost:4000/appartments\";\n  const [w, setW] = useState(960)\n\n\n  \n\n  useEffect(() => {\n    /**\n     * méthode qui fetch le backend API qui contient les\n     * data des appartements\n     */\n    const axiosFetchData = async () => {\n      try {\n        // Fetch data using Axios\n        const response = await axios.get(APPART_URL);\n        // Set fetched data into state\n        setApartments(response.data);\n        \n      } catch (error) {\n        console.error(\"Error fetching apartment data:\", error);\n      }\n    };\n    axiosFetchData();\n    \n  }, []);\n\n  const CardCell = ({ columnIndex, rowIndex, style }) => {\n    //Calculate the index using row and column indices\n    const index = rowIndex * 3 + columnIndex; // 3 columns per row\n\n    if (index >= apartments.length) return null; // prevent out-of bounce errors\n\n    const { price, title, img, url } = apartments[index];\n\n    \n\n    return (\n      <div style={style}>\n        \n        <CardItem\n          src={img}\n          text={`${price}$ ${title}`}\n          path={url}\n          label=\"Facebook\"\n        />\n      </div>\n    );\n  };\n\n  \n\n  const ApartmentGrid = () => {\n\n    \n    if (w >= 960) {\n\n      return (\n        <Grid\n          columnCount={3}\n          rowCount={Math.ceil(apartments.length / 3)} //Number of rows needed\n          columnWidth={300}\n          height={900}\n          rowHeight={300}\n          width={850}\n        >\n          {CardCell}\n          \n        </Grid>\n      );\n\n\n\n    }\n   else {\n      return(\n<Grid\n          columnCount={1}\n          rowCount={Math.ceil(apartments.length / 3)} //Number of rows needed\n          columnWidth={350}\n          height={900}\n          rowHeight={300}\n          width={350}\n        >\n          {CardCell}\n          \n        </Grid>\n\n      )\n    }\n    \n  };\n  /**\n   * méthode qui permet de savoir la taille de la fenetre à tout moment\n   */\n  const useWindowWidth = () => {\n    const [windowWidth, setWindowWidth] = useState(0);\n\n    useEffect(() =>{\n      // Fonction pour mettre à jour le state lorsque la fenêtre est redimensionnée\n      const handleResize = () => {\n        setWindowWidth(window.innerWidth)\n      }\n      //ajouter un gestionnaire d'évènement pour resizd\n      window.addEventListener('resize',handleResize);\n\n      // Supprimer le gestionnaire d'événements au nettoyage\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n\n\n    })\n    return windowWidth;\n\n  }\n\n  seuseWindowWidth();\n  return (\n    <div className=\"cards\">\n     <h1>taille: {w}</h1>\n      <h1> {apartments.length} Résultats</h1>\n      <div className=\"cards__container\">\n        <div className=\"cards__wrapper\">\n\n          <div className=\"cards__item\">\n          <ApartmentGrid />\n          </div>\n          \n          \n        </div>\n        \n      </div>\n      \n    </div>\n  );\n}\n\nexport default Card;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}